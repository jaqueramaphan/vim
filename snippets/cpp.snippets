# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r"))
	{
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}

# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};

# std::vector
snippet vector
	std::vector<${1:char}> v${2};

# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`}
	{
		${2}
	} /* $1 */

# Foreach Loop
snippet foreach
	for (${1:Container}::iterator ${2:iter} = ${3:container}.begin();
	     $2 != $3.end();
	     ++$2)
	{
		${4:/* code */}
	}${5}

# Class
snippet cl
	class ${1:`Filename('$1_t', 'name')`} : ${2:Base}
	{
	public:
		$1(${3:arguments});
		virtual ~$1();
	
	private:
		$1(const $1 &);
		$1 & operator=(const $1 &);

		${4:/* data */}
	};${5}

# Method
snippet meth
	${1:void} ${2:class_name}::${3:function_name}(${4})
	{
		${5:/* code */}
	}

# Constructor
snippet ctor
	${1:Class}::$1(${2:args}) :${3}
	{${4}
	}${5}

# Destructor
snippet dtor
	${1:Class}::~$1()
	{${2}
	}${3}
